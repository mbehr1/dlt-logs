"use strict";(self.webpackChunkdlt_logs=self.webpackChunkdlt_logs||[]).push([[583],{4040:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>x,frontMatter:()=>o,metadata:()=>d,toc:()=>h});var s=n(4848),t=n(8453),i=(n(1470),n(9365),n(638)),l=n(6025);const o={id:"searchPanel",title:"Search function",sidebar_label:"Search function"},c=void 0,d={id:"searchPanel",title:"Search function",description:'To open the search panel use the command "search dlt logs".',source:"@site/docs/searchPanel.md",sourceDirName:".",slug:"/searchPanel",permalink:"/dlt-logs/docs/searchPanel",draft:!1,unlisted:!1,editUrl:"https://github.com/mbehr1/dlt-logs/edit/master/docs/dlt-logs/docs/searchPanel.md",tags:[],version:"current",frontMatter:{id:"searchPanel",title:"Search function",sidebar_label:"Search function"},sidebar:"dltLogsSideBar",previous:{title:"Toggle sort order",permalink:"/dlt-logs/docs/toggleSortOrder"},next:{title:"Report generation",permalink:"/dlt-logs/docs/reports"}},a={},h=[{value:"Search modes",id:"search-modes",level:3},{value:"Set filters directly from search",id:"set-filters-directly-from-search",level:3},{value:"Adding / enabling a filter",id:"adding--enabling-a-filter",level:4},{value:"Search for ecu/apid/ctid",id:"search-for-ecuapidctid",level:2},{value:"ECU/APID/CTID search in non regular expression mode",id:"ecuapidctid-search-in-non-regular-expression-mode",level:3},{value:"Examples:",id:"examples",level:4},{value:"ECU/APID/CTID search in regular expression mode",id:"ecuapidctid-search-in-regular-expression-mode",level:3},{value:"Examples:",id:"examples-1",level:4}];function u(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:'To open the search panel use the command "search dlt logs".'}),"\n",(0,s.jsx)(i.A,{lightImageSrc:(0,l.A)("/img/searchPanel_light.png"),darkImageSrc:(0,l.A)("/img/searchPanel.png")}),"\n",(0,s.jsxs)(r.p,{children:["The function searches for matching logs with the text in the payload text.\nSee ",(0,s.jsx)(r.a,{href:"#search-for-ecuapidctid",children:"Search for ecu/apid/ctid"})," on how to restrict/extend the search to ECU/APID/CTID."]}),"\n",(0,s.jsx)(r.h3,{id:"search-modes",children:"Search modes"}),"\n",(0,s.jsx)(r.p,{children:"The search function has the following modes:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"mode name"}),(0,s.jsx)(r.th,{children:"description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Use current document filter"})}),(0,s.jsx)(r.td,{children:"The search will be limited to the logs matching the filters set in the current document."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Use case sensitive"})}),(0,s.jsx)(r.td,{children:"If set the search considers the case (upper/lower). If not set the search is case-insensitive."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"Use regular expression"})}),(0,s.jsxs)(r.td,{children:["If set the search text is a ",(0,s.jsx)(r.strong,{children:"regular expression"}),". E.g. ",(0,s.jsx)(r.code,{children:"^error|^warning"})," finds only logs starting with ",(0,s.jsx)(r.code,{children:"error"})," or ",(0,s.jsx)(r.code,{children:"warning"}),". ",(0,s.jsx)("br",{}),"If not set any logs containing the ",(0,s.jsx)(r.strong,{children:"whole search text"})," within the payload is found. E.g. ",(0,s.jsx)(r.code,{children:"err #2"})," matches all logs containing exactly ",(0,s.jsx)(r.code,{children:"err #2"})," in the payload."]})]})]})]}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsxs)(r.p,{children:["Use the excellent website ",(0,s.jsx)(r.a,{href:"https://regex101.com/?regex=%5EMemTotal&flavor=javascript",children:"regex101.com"})," to test your regex expressions.\nIt provides a good help as well. Flavor used is 'javascript'."]})}),"\n",(0,s.jsx)(r.h3,{id:"set-filters-directly-from-search",children:"Set filters directly from search"}),"\n",(0,s.jsx)(r.h4,{id:"adding--enabling-a-filter",children:"Adding / enabling a filter"}),"\n",(0,s.jsx)(r.p,{children:"The current search expression can be quickly set as a filter via the '+' button in the right corner of the search panel title.\nIf the filter does already exist but it disabled it will be enabled."}),"\n",(0,s.jsxs)(r.admonition,{type:"note",children:[(0,s.jsx)(r.p,{children:"An added filter is added only temporarily and will only be available for the current document. To persist the filter to the configuration\nyou can edit the filter by the 'edit' button in the tree view:"}),(0,s.jsx)(i.A,{lightImageSrc:(0,l.A)("/img/treeView_editFilter_light.png"),darkImageSrc:(0,l.A)("/img/treeView_editFilter_dark.png")})]}),"\n",(0,s.jsx)(r.h2,{id:"search-for-ecuapidctid",children:"Search for ecu/apid/ctid"}),"\n",(0,s.jsx)(r.p,{children:'You can search for / restrict the search text to ECU/APID/CTID logs as well. This is similar to the DLT-Viewer "search header" option.'}),"\n",(0,s.jsxs)(r.p,{children:["In general the syntax for ECU/APID/CTID is similar to ",(0,s.jsx)(r.code,{children:"adlt convert --eac"})," cmd line option:"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"ECU:APID:CTID,ECU2:APID2:CTID2[,...]\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Ecu, apid, ctid are separated by ",(0,s.jsx)(r.code,{children:":"}),". Empty ones are ignored. E.g. ",(0,s.jsx)(r.code,{children:":apid:"})," filters for apid only not for ecu. Entries can contain regex chars e.g."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"ECU1|ECU2::\n"})}),"\n",(0,s.jsx)(r.p,{children:"filters for ECU1 or ECU2."}),"\n",(0,s.jsxs)(r.p,{children:["Separate multiple filter by ",(0,s.jsx)(r.code,{children:","}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"ecuapidctid-search-in-non-regular-expression-mode",children:"ECU/APID/CTID search in non regular expression mode"}),"\n",(0,s.jsx)(r.p,{children:"In normal / non regular expression search mode a ECU/APID/CTID search can be performed adding the following expression to the start of the search text."}),"\n",(0,s.jsxs)(r.p,{children:["The ECU/APID/CTID expression must be prepended with an ",(0,s.jsx)(r.code,{children:"@"})," and the normal search string needs to be separated with a space. E.g."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"@ECU1 needle\n"})}),"\n",(0,s.jsxs)(r.p,{children:["searches for ",(0,s.jsx)(r.code,{children:"needle"})," within all logs from ",(0,s.jsx)(r.code,{children:"ECU1"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["The ECU/APID/CTID syntax is only evaluated if it's directly at the start of the search string after the ",(0,s.jsx)(r.code,{children:"@"}),"."]}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsxs)(r.p,{children:["If you want dont want to search for ECU/APID/CTID but you first search word starts with ",(0,s.jsx)(r.code,{children:"@"})," add a space in front."]})}),"\n",(0,s.jsx)(r.h4,{id:"examples",children:"Examples:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Search string"}),(0,s.jsx)(r.th,{children:"description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@ECU1:APID needle"})}),(0,s.jsxs)(r.td,{children:["searches for ",(0,s.jsx)(r.code,{children:"needle"})," in the payload text of all logs from ecu ",(0,s.jsx)(r.code,{children:"ECU1"})," with apid ",(0,s.jsx)(r.code,{children:"APID"}),"."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"\u2003@ needle"})}),(0,s.jsxs)(r.td,{children:["searches for ",(0,s.jsx)(r.code,{children:"@ needle"}),"in the payload text of all logs. (see the space at the front, which is not searched for)"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@ECU1::CTID,ECU2 error"})}),(0,s.jsxs)(r.td,{children:["searches for ",(0,s.jsx)(r.code,{children:"error"})," in the payload text of all logs from ecu ",(0,s.jsx)(r.code,{children:"ECU1"})," with ctid ",(0,s.jsx)(r.code,{children:"CTID"})," or from ecu ",(0,s.jsx)(r.code,{children:"ECU2"}),"."]})]})]})]}),"\n",(0,s.jsx)(r.h3,{id:"ecuapidctid-search-in-regular-expression-mode",children:"ECU/APID/CTID search in regular expression mode"}),"\n",(0,s.jsx)(r.p,{children:"In regular expression mode..."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"@ECU1 ^foo|@ECU2:API2 bar|error\n"})}),"\n",(0,s.jsxs)(r.p,{children:["searches for logs from ",(0,s.jsx)(r.code,{children:"ECU1"})," starting with ",(0,s.jsx)(r.code,{children:"foo"})," or logs from ",(0,s.jsx)(r.code,{children:"ECU1:API2"})," containing bar or any log containing ",(0,s.jsx)(r.code,{children:"error"})]}),"\n",(0,s.jsx)(r.admonition,{type:"note",children:(0,s.jsxs)(r.p,{children:["If the ECU/APID/CTID expression contains a regular expression with the ",(0,s.jsx)(r.code,{children:"\\|"})," symbol the whole expression needs to be put in round brackets! E.g. ",(0,s.jsx)(r.code,{children:"@(ECU1|ECU2) ..."}),"."]})}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsxs)(r.p,{children:["Same logic applies as for non regular expression mode: if you want to search for a regex starting with ",(0,s.jsx)(r.code,{children:"@"})," prefix it with a space.\nIf you want to search for a regex starting with a space and a ",(0,s.jsx)(r.code,{children:"@"})," use ",(0,s.jsx)(r.code,{children:"\\ @"}),"."]})}),"\n",(0,s.jsx)(r.h4,{id:"examples-1",children:"Examples:"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Search\xa0string\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"}),(0,s.jsx)(r.th,{children:"description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@ECU1:APID needle|error"})}),(0,s.jsxs)(r.td,{children:["searches for logs from ",(0,s.jsx)(r.code,{children:"ECU1:APID"})," containing ",(0,s.jsx)(r.code,{children:"needle"})," or for any logs with ",(0,s.jsx)(r.code,{children:"error"})," in the payload."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@ECU1 (foo|bar)"})}),(0,s.jsxs)(r.td,{children:["searches for logs from ",(0,s.jsx)(r.code,{children:"ECU1"})," containing ",(0,s.jsx)(r.code,{children:"foo"})," or ",(0,s.jsx)(r.code,{children:"bar"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"\u2003@ECU1 foo|bar"})}),(0,s.jsxs)(r.td,{children:["searches for any logs containing ",(0,s.jsx)(r.code,{children:"@ECU1 foo"})," or ",(0,s.jsx)(r.code,{children:"bar"})," (see the space at the start)"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@ECU1 (foo|@ECU2 bar)"})}),(0,s.jsxs)(r.td,{children:["searches for logs from ",(0,s.jsx)(r.code,{children:"ECU1"})," containing ",(0,s.jsx)(r.code,{children:"for"})," or ",(0,s.jsx)(r.code,{children:"@ECU2 bar"})," (the @ECU2 is not an outer disjunction alternative!)"]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@ECU1 foo|@ECU2 bar"})}),(0,s.jsxs)(r.td,{children:["searches for logs from ",(0,s.jsx)(r.code,{children:"ECU1"})," containing ",(0,s.jsx)(r.code,{children:"for"})," or from ",(0,s.jsx)(r.code,{children:"ECU2"})," containing ",(0,s.jsx)(r.code,{children:"bar"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@:APID foo|@::CTID bar"})}),(0,s.jsxs)(r.td,{children:["searches for logs with apid ",(0,s.jsx)(r.code,{children:"APID"})," containing ",(0,s.jsx)(r.code,{children:"for"})," or with ctid ",(0,s.jsx)(r.code,{children:"CTID"})," containing ",(0,s.jsx)(r.code,{children:"bar"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@(:AP1|AP2) foo|@::CTID (bar|\u2003@foo)"})}),(0,s.jsxs)(r.td,{children:["searches for logs with -- apid ",(0,s.jsx)(r.code,{children:"AP1"})," or apid ",(0,s.jsx)(r.code,{children:"AP2"})," containing ",(0,s.jsx)(r.code,{children:"for"})," -- or with ctid ",(0,s.jsx)(r.code,{children:"CTID"})," containing ",(0,s.jsx)(r.code,{children:"bar"})," or ",(0,s.jsx)(r.code,{children:" @foo"})," (space @foo).",(0,s.jsx)("br",{}),(0,s.jsxs)(r.strong,{children:["Take care: here the ECU/APID/CTID expression must be surrounded by brackets as it contains a ",(0,s.jsx)(r.code,{children:"|"}),"!"]})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@:APID"})}),(0,s.jsxs)(r.td,{children:["searches for all logs with apid ",(0,s.jsx)(r.code,{children:"APID"})]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.code,{children:"@:APID,::CTID foo"})}),(0,s.jsxs)(r.td,{children:["searches for ",(0,s.jsx)(r.code,{children:"foo"})," in all logs with apid ",(0,s.jsx)(r.code,{children:"APID"})," or ctid ",(0,s.jsx)(r.code,{children:"CTID"})]})]})]})]}),"\n",(0,s.jsxs)(r.admonition,{title:"implementation detail",type:"note",children:[(0,s.jsxs)(r.p,{children:["The search string is first parsed as a regular expression and for all disjunction alternatives (the parts splitted by ",(0,s.jsx)(r.code,{children:"|"}),") it's checked whether a part starts with ",(0,s.jsx)(r.code,{children:"@"})," followed by a ECU/APID/CTID search syntax followed by a space. So the upper example is divided into:"]}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"@ECU1 ^foo\n"})}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"@ECU2:API2 bar\n"})}),(0,s.jsx)(r.p,{children:"and"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"error\n"})}),(0,s.jsx)(r.p,{children:"Those are transformed into 3 separate filters:"}),(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["ecu ",(0,s.jsx)(r.code,{children:"ECU1"}),", payloadRegex ",(0,s.jsx)(r.code,{children:"^foo"})]}),"\n",(0,s.jsxs)(r.li,{children:["ecu ",(0,s.jsx)(r.code,{children:"ECU2"}),", apid: ",(0,s.jsx)(r.code,{children:"API2"}),", payloadRegex ",(0,s.jsx)(r.code,{children:"bar"})]}),"\n",(0,s.jsxs)(r.li,{children:["payloadRegex ",(0,s.jsx)(r.code,{children:"error"})]}),"\n"]})]})]})}function x(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},638:(e,r,n)=>{n.d(r,{A:()=>i});n(6540);var s=n(5293),t=n(4848);const i=e=>{let{lightImageSrc:r,darkImageSrc:n}=e;const i="dark"===(0,s.G)().colorMode;return(0,t.jsx)("img",{src:i?n:r})}},9365:(e,r,n)=>{n.d(r,{A:()=>l});n(6540);var s=n(4164);const t={tabItem:"tabItem_Ymn6"};var i=n(4848);function l(e){let{children:r,hidden:n,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.A)(t.tabItem,l),hidden:n,children:r})}},1470:(e,r,n)=>{n.d(r,{A:()=>v});var s=n(6540),t=n(4164),i=n(3104),l=n(6347),o=n(205),c=n(7485),d=n(1682),a=n(9466);function h(e){var r,n;return null!=(r=null==(n=s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?r:[]}function u(e){const{values:r,children:n}=e;return(0,s.useMemo)((()=>{const e=null!=r?r:function(e){return h(e).map((e=>{let{props:{value:r,label:n,attributes:s,default:t}}=e;return{value:r,label:n,attributes:s,default:t}}))}(n);return function(e){const r=(0,d.X)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error('Docusaurus error: Duplicate values "'+r.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[r,n])}function x(e){let{value:r,tabValues:n}=e;return n.some((e=>e.value===r))}function j(e){let{queryString:r=!1,groupId:n}=e;const t=(0,l.W6)(),i=function(e){let{queryString:r=!1,groupId:n}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:r,groupId:n});return[(0,c.aZ)(i),(0,s.useCallback)((e=>{if(!i)return;const r=new URLSearchParams(t.location.search);r.set(i,e),t.replace({...t.location,search:r.toString()})}),[i,t])]}function p(e){const{defaultValue:r,queryString:n=!1,groupId:t}=e,i=u(e),[l,c]=(0,s.useState)((()=>function(e){var r;let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!x({value:n,tabValues:s}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+s.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const t=null!=(r=s.find((e=>e.default)))?r:s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:r,tabValues:i}))),[d,h]=j({queryString:n,groupId:t}),[p,f]=function(e){let{groupId:r}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(r),[t,i]=(0,a.Dv)(n);return[t,(0,s.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:t}),g=(()=>{const e=null!=d?d:p;return x({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{g&&c(g)}),[g]);return{selectedValue:l,selectValue:(0,s.useCallback)((e=>{if(!x({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);c(e),h(e),f(e)}),[h,f,i]),tabValues:i}}var f=n(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=n(4848);function b(e){let{className:r,block:n,selectedValue:s,selectValue:l,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),a=e=>{const r=e.currentTarget,n=c.indexOf(r),t=o[n].value;t!==s&&(d(r),l(t))},h=e=>{var r;let n=null;switch(e.key){case"Enter":a(e);break;case"ArrowRight":{var s;const r=c.indexOf(e.currentTarget)+1;n=null!=(s=c[r])?s:c[0];break}case"ArrowLeft":{var t;const r=c.indexOf(e.currentTarget)-1;n=null!=(t=c[r])?t:c[c.length-1];break}}null==(r=n)||r.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},r),children:o.map((e=>{let{value:r,label:n,attributes:i}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,ref:e=>c.push(e),onKeyDown:h,onClick:a,...i,className:(0,t.A)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":s===r}),children:null!=n?n:r},r)}))})}function I(e){let{lazy:r,children:n,selectedValue:t}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(r){const e=i.find((e=>e.props.value===t));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,s.cloneElement)(e,{key:r,hidden:e.props.value!==t})))})}function C(e){const r=p(e);return(0,m.jsxs)("div",{className:(0,t.A)("tabs-container",g.tabList),children:[(0,m.jsx)(b,{...e,...r}),(0,m.jsx)(I,{...e,...r})]})}function v(e){const r=(0,f.A)();return(0,m.jsx)(C,{...e,children:h(e.children)},String(r))}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>o});var s=n(6540);const t={},i=s.createContext(t);function l(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);