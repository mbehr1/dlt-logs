"use strict";(self.webpackChunkdlt_logs=self.webpackChunkdlt_logs||[]).push([[550],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,f=c["".concat(u,".").concat(m)]||c[m]||p[m]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),r=n(6010),i={tabItem:"tabItem_Ymn6"};function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return N}});var a=n(7462),r=n(7294),i=n(6010),o=n(2466),l=n(6550),u=n(1980),s=n(7392),d=n(12);function c(e){return function(e){var t,n;return null!=(t=null==(n=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:c(n);return function(e){var t=(0,s.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,i=(0,l.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,u._X)(o),(0,r.useCallback)((function(e){if(o){var t=new URLSearchParams(i.location.search);t.set(o,e),i.replace(Object.assign({},i.location,{search:t.toString()}))}}),[o,i])]}function g(e){var t,n,a,i,o=e.defaultValue,l=e.queryString,u=void 0!==l&&l,s=e.groupId,c=p(e),g=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:c})})),h=g[0],v=g[1],b=f({queryString:u,groupId:s}),k=b[0],y=b[1],N=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),n=(0,d.Nk)(t),a=n[0],i=n[1],[a,(0,r.useCallback)((function(e){t&&i.set(e)}),[t,i])]),w=N[0],I=N[1],E=function(){var e=null!=k?k:w;return m({value:e,tabValues:c})?e:null}();return(0,r.useLayoutEffect)((function(){E&&v(E)}),[E]),{selectedValue:h,selectValue:(0,r.useCallback)((function(e){if(!m({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);v(e),y(e),I(e)}),[y,I,c]),tabValues:c}}var h=n(2389),v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){var t=e.className,n=e.block,l=e.selectedValue,u=e.selectValue,s=e.tabValues,d=[],c=(0,o.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=d.indexOf(t),a=s[n].value;a!==l&&(c(t),u(a))},m=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var a,r=d.indexOf(e.currentTarget)+1;n=null!=(a=d[r])?a:d[0];break;case"ArrowLeft":var i,o=d.indexOf(e.currentTarget)-1;n=null!=(i=d[o])?i:d[d.length-1]}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},s.map((function(e){var t=e.value,n=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return d.push(e)},onKeyDown:m,onClick:p},o,{className:(0,i.Z)("tabs__item",v.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function k(e){var t=e.lazy,n=e.children,a=e.selectedValue,i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=i.find((function(e){return e.props.value===a}));return o?(0,r.cloneElement)(o,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function y(e){var t=g(e);return r.createElement("div",{className:(0,i.Z)("tabs-container",v.tabList)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(k,(0,a.Z)({},e,t)))}function N(e){var t=(0,h.Z)();return r.createElement(y,(0,a.Z)({key:String(t)},e))}},9601:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(4866),l=n(5162),u=["components"],s={id:"someIpPlugin",title:"SOME/IP decoder plugin",sidebar_label:"Plugin SOME/IP decoder"},d=void 0,c={unversionedId:"someIpPlugin",id:"someIpPlugin",title:"SOME/IP decoder plugin",description:"DLT-Logs extension version >= 1.10.0 come with a built-in SOME/IP decoder plugin.",source:"@site/docs/someIpPlugin.md",sourceDirName:".",slug:"/someIpPlugin",permalink:"/dlt-logs/docs/someIpPlugin",draft:!1,editUrl:"https://github.com/mbehr1/dlt-logs/edit/master/docs/dlt-logs/docs/someIpPlugin.md",tags:[],version:"current",frontMatter:{id:"someIpPlugin",title:"SOME/IP decoder plugin",sidebar_label:"Plugin SOME/IP decoder"},sidebar:"dltLogsSideBar",previous:{title:"Plugin File Transfer",permalink:"/dlt-logs/docs/fileTransfer"},next:{title:"Plugin CAN decoder",permalink:"/dlt-logs/docs/canPlugin"}},p={},m=[{value:"Example",id:"example",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Treeview",id:"treeview",level:2},{value:"Encoding of SOME/IP messages in DLT log message",id:"encoding-of-someip-messages-in-dlt-log-message",level:2},{value:"Limitations",id:"limitations",level:2}],f={toc:m},g="wrapper";function h(e){var t=e.components,n=(0,r.Z)(e,u);return(0,i.kt)(g,(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"DLT-Logs extension version >= 1.10.0 come with a built-in SOME/IP decoder plugin."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"SOME/IP messages will be decoded like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'APID TC   ipc      > (632a:0005) ServiceName(0080).set_fieldName_field{"fieldName":field_value}[OK]\n')),(0,i.kt)("h3",{id:"explanation"},"Explanation"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"symbol"),(0,i.kt)("th",{parentName:"tr",align:null},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},">")),(0,i.kt)("td",{parentName:"tr",align:null},"SOME/IP request. Other symbols here are ",(0,i.kt)("inlineCode",{parentName:"td"},"<")," for response, ",(0,i.kt)("inlineCode",{parentName:"td"},"*")," for notification, ",(0,i.kt)("inlineCode",{parentName:"td"},"\\")," for request wo. response / fire&forget or ",(0,i.kt)("inlineCode",{parentName:"td"},"!")," for errors.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(632a:0005)")),(0,i.kt)("td",{parentName:"tr",align:null},"Client id (here 632a) and session id (here 5) as hex numbers.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ServiceName")),(0,i.kt)("td",{parentName:"tr",align:null},"Short name of the service decoded.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(0080)")),(0,i.kt)("td",{parentName:"tr",align:null},"Instance id in hex.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"set_fieldName_field")),(0,i.kt)("td",{parentName:"tr",align:null},"Method or event short name. Here a ",(0,i.kt)("inlineCode",{parentName:"td"},"SETTER")," for field ",(0,i.kt)("inlineCode",{parentName:"td"},"fieldName")," is called.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"{...}")),(0,i.kt)("td",{parentName:"tr",align:null},"Decoded payload of the method. Here ",(0,i.kt)("inlineCode",{parentName:"td"},"fieldName"),"is set to ",(0,i.kt)("inlineCode",{parentName:"td"},"field_value"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"[OK]")),(0,i.kt)("td",{parentName:"tr",align:null},"Return code of the SOME/IP message.")))),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"You have to configure the SOME/IP plugin. To configure the plugin call"),(0,i.kt)(o.Z,{groupId:"operating-systems",defaultValue:"win",values:[{label:"Windows",value:"win"},{label:"macOS",value:"mac"},{label:"Linux",value:"linux"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"win",mdxType:"TabItem"},'Use F1 or Ctrl+Shift+P and enter/select command "Preferences: Open Settings (JSON)".'),(0,i.kt)(l.Z,{value:"mac",mdxType:"TabItem"},'Use \u21e7\u2318P and enter/select command "Preferences: Open Settings (JSON)".'),(0,i.kt)(l.Z,{value:"linux",mdxType:"TabItem"},'Use Ctrl+Shift+P and enter/select command "Preferences: Open Settings (JSON)".')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsonc"},'"dlt-logs.plugins": [\n        {\n            "name":"SomeIp",\n            "enabled": true, // you can set it to false to disable the plugin\n            "fibexDir": "/home/...", // or "c:\\\\...". Set it to the folder containing your FIBEX files.\n            "ctid": "TC", // optional ctid. Defaults to "TC" if not set\n            "mtin": 1 // optional MTIN. Defaults to MTIN_NW_TRACE (1) if not set\n        },\n        {\n            "name": "FileTransfer", // config for file transfer plugin...\n            ...\n        },\n    ],\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"fibexDir")," needs to point to a folder containing the FIBEX files with extension .xml.\nPlease keep the files uncompressed (no .zip, no .tgz) there.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"You can keep multiple files in the folder. They will be sorted in descending order alphabetically first before loading. So if you have multiple files e.g. with a SW revision as part of the file name the one with the latest SW revision will be loaded first. This is important as on loading further files only new services/methods will be added. So the files loaded first determine the version used.\nAnyhow please dont keep files from older versions as opening and parsing them takes CPU time!")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"If you changed the content of the folder for now you do need to open a new file or use ",(0,i.kt)("inlineCode",{parentName:"p"},"Developer: Reload window")," to reload the window incl. the extension host.")),(0,i.kt)("h2",{id:"treeview"},"Treeview"),(0,i.kt)("p",null,"In the tree-view you'll find more information about the loaded service and methods under"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Plugins\n|- SOME/IP Decoder\n   |- Services (<number of services loaded>)\n      | - <list of all loaded services with short name and version>\n          | - <list of all methods for each service with short name >\n   | - Datatypes (<number of datatypes loaded>)\n   | - Codings (<number of (en-)codings for datatypes loaded>)\n")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"The tooltip of each item contains more info e.g. the description (if available in the FIBEX).")),(0,i.kt)("p",null,"(todo add picture)"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"From the tree view you can directly apply a filter for a service or method/field/event with the ",(0,i.kt)("inlineCode",{parentName:"p"},"adjust filter to hide details")," (if the items are currently visible) or ",(0,i.kt)("inlineCode",{parentName:"p"},"adjust filter to show more details")," icon button on the right hand side of the tree view item."),(0,i.kt)("p",{parentName:"admonition"},"Using the ",(0,i.kt)("inlineCode",{parentName:"p"},"open report")," icon you can directly open a graphical report showing the service or field data over time!\n(todo add picture)")),(0,i.kt)("h2",{id:"encoding-of-someip-messages-in-dlt-log-message"},"Encoding of SOME/IP messages in DLT log message"),(0,i.kt)("p",null,"The decoder assumes that the message is encoded as type ",(0,i.kt)("inlineCode",{parentName:"p"},"NW_TRACE")," with the configured ",(0,i.kt)("inlineCode",{parentName:"p"},"MTIN")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"CTID"),".See ",(0,i.kt)("a",{parentName:"p",href:"#configuration"},"Configuration"),". The SOME/IP message itself is encoded as two raw message payloads:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"4 bytes with the IPv4 address, 2 bytes with the udp/tcp, 1 byte protocol (0 = local, 1 = tcp, 2 = udp), 1 byte indicating incoming or outgoing message and 1,2 or 4 bytes encoded instance ID."),(0,i.kt)("li",{parentName:"ol"},"SOME/IP header (16 bytes) and payload")),(0,i.kt)("h2",{id:"limitations"},"Limitations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Little testing. If you have encounter any problems please raise an issue in github!")))}h.isMDXComponent=!0}}]);