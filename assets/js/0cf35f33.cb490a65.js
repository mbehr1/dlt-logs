"use strict";(self.webpackChunkdlt_logs=self.webpackChunkdlt_logs||[]).push([[658],{6723:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>d,toc:()=>u});var i=t(4848),r=t(8453),l=t(1470),s=t(9365);const a={id:"canPlugin",title:"CAN decoder plugin",sidebar_label:"Plugin CAN decoder"},o=void 0,d={id:"canPlugin",title:"CAN decoder plugin",description:"DLT-Logs extension version >= 1.50.0 come with a built-in CAN decoder plugin based on configurable fibex files and the possibility to open CAN file in .asc format directly.",source:"@site/docs/canPlugin.md",sourceDirName:".",slug:"/canPlugin",permalink:"/dlt-logs/docs/canPlugin",draft:!1,unlisted:!1,editUrl:"https://github.com/mbehr1/dlt-logs/edit/master/docs/dlt-logs/docs/canPlugin.md",tags:[],version:"current",frontMatter:{id:"canPlugin",title:"CAN decoder plugin",sidebar_label:"Plugin CAN decoder"},sidebar:"dltLogsSideBar",previous:{title:"Plugin SOME/IP decoder",permalink:"/dlt-logs/docs/someIpPlugin"},next:{title:"Plugin Non-verbose mode",permalink:"/dlt-logs/docs/nonVerbosePlugin"}},c={},u=[{value:"Example",id:"example",level:2},{value:"Explanation",id:"explanation",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Treeview",id:"treeview",level:2},{value:"Encoding of CAN messages in DLT log message",id:"encoding-of-can-messages-in-dlt-log-message",level:2},{value:"Limitations",id:"limitations",level:2}];function h(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["DLT-Logs extension version >= 1.50.0 come with a built-in CAN decoder plugin based on configurable fibex files and the possibility to open CAN file in ",(0,i.jsx)(n.code,{children:".asc"})," format directly."]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(n.p,{children:["If a CAN ",(0,i.jsx)(n.code,{children:".asc"})," file is opened and the CAN plugin is configured with a FIBEX file the CAN messages will be decoded e.g. like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'CAN1 CAN TC   can      > IuK_CAN 0x510 Networkmanagement3_Status [<orig can payload>]:{"Networkmanagement3":{"NM3ControlBitVector":..., "NM3SenderECUId":...,...}}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"explanation",children:"Explanation"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"symbol"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CAN1"})}),(0,i.jsx)(n.td,{children:"First CAN bus/channel. CAN channels/buses are mapped to ECU ids with name CANx."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"CAN"})}),(0,i.jsxs)(n.td,{children:["static APID ",(0,i.jsx)(n.code,{children:"CAN"})," is used for CAN frames,"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"TC"})}),(0,i.jsxs)(n.td,{children:["static CTID ",(0,i.jsx)(n.code,{children:"TC"})," is used for decoded CAN frames"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:">"})}),(0,i.jsxs)(n.td,{children:["RX/TX direction. ",(0,i.jsx)(n.code,{children:">"})," for a received msg (RX), ",(0,i.jsx)(n.code,{children:"<"})," for a transmitted frame (TX)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"IuK_CAN"})}),(0,i.jsxs)(n.td,{children:["Name of the CAN bus. Here ",(0,i.jsx)(n.code,{children:"IuK_CAN"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0x510"})}),(0,i.jsx)(n.td,{children:"CAN frame identifier"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"Networkmanagement3_Status"})}),(0,i.jsx)(n.td,{children:"Name of the frame identifier."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{...}"})}),(0,i.jsx)(n.td,{children:"Decoded payload of the frame in JSON format"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(n.p,{children:"You have to configure the CAN plugin. To configure the plugin call"}),"\n",(0,i.jsxs)(l.A,{groupId:"operating-systems",defaultValue:"win",values:[{label:"Windows",value:"win"},{label:"macOS",value:"mac"},{label:"Linux",value:"linux"}],children:[(0,i.jsx)(s.A,{value:"win",children:'Use F1 or Ctrl+Shift+P and enter/select command "Preferences: Open Settings (JSON)".'}),(0,i.jsx)(s.A,{value:"mac",children:'Use \u21e7\u2318P and enter/select command "Preferences: Open Settings (JSON)".'}),(0,i.jsx)(s.A,{value:"linux",children:'Use Ctrl+Shift+P and enter/select command "Preferences: Open Settings (JSON)".'})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",children:'"dlt-logs.plugins": [\n        {\n            "name":"CAN",\n            "enabled": true, // you can set it to false to disable the plugin\n            "fibexDir": "/home/..." // or "c:\\\\...". Set it to the folder containing your FIBEX files.\n        },\n        {\n            "name": "FileTransfer", // config for other plugins, here file transfer plugin...\n            ...\n        },\n    ],\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"fibexDir"})," needs to point to a folder containing the FIBEX files with extension .xml.\nPlease keep the files uncompressed (no .zip, no .tgz) there."]})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"You can keep multiple files in the folder. If you have multiple files providing info for the same CAN bus/channel the channels are merged by adding missing frame ids to the first fibex providing the channel. So please ensure that all frames from channels with the same short-name and with same a identifier have the same semantics/meaning!"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["If you changed the content of the folder for now you do need to open a new file or use ",(0,i.jsx)(n.code,{children:"Developer: Reload window"})," to reload the window incl. the extension host."]})}),"\n",(0,i.jsx)(n.h2,{id:"treeview",children:"Treeview"}),"\n",(0,i.jsx)(n.p,{children:"In the tree-view you'll find more information about the loaded CAN channels and frames, PDUs, signals under"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Plugins\n|- CAN Decoder\n   |- Channels #<number of channels loaded>\n      | - <list of all loaded channels/busses\n          | - <list of all frames for that channel with short name > sorted by frame id\n            | - <list of all PDUs within that frame>\n                | - <list of all signal-instances>\n   | - Signals #<number of signals loaded>\n   | - Codings #<number of (en-)codings for datatypes loaded>\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"The tooltip of each item contains more info e.g. the description (if available in the FIBEX)."})}),"\n",(0,i.jsx)(n.p,{children:"(todo add picture)"}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["From the tree view frames you can directly apply a filter with the ",(0,i.jsx)(n.code,{children:"adjust filter to hide details"})," (if the frames are currently visible) or ",(0,i.jsx)(n.code,{children:"adjust filter to show more details"})," icon button on the right hand side of the frame item."]}),(0,i.jsxs)(n.p,{children:["Using the ",(0,i.jsx)(n.code,{children:"open report"})," icon you can directly open a graphical report showing the frame data over time!\n(todo add picture)"]})]}),"\n",(0,i.jsx)(n.h2,{id:"encoding-of-can-messages-in-dlt-log-message",children:"Encoding of CAN messages in DLT log message"}),"\n",(0,i.jsxs)(n.p,{children:["The decoder assumes that the message is encoded as type ",(0,i.jsx)(n.code,{children:"NW_TRACE/CAN"})," with the CTID ",(0,i.jsx)(n.code,{children:"TC"}),". The CAN message itself is encoded as two raw message payloads:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"4 bytes with the frame identifier."}),"\n",(0,i.jsx)(n.li,{children:"CAN frame payload"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Limited testing. Please raise an issue if you find unsupported CAN traces!"}),"\n"]})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var i=t(4164);const r={tabItem:"tabItem_Ymn6"};var l=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,s),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>N});var i=t(6540),r=t(4164),l=t(3104),s=t(6347),a=t(205),o=t(7485),d=t(1682),c=t(9466);function u(e){var n,t;return null!=(n=null==(t=i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,o.aZ)(l),(0,i.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,l=h(e),[s,o]=(0,i.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+i.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const r=null!=(n=i.find((e=>e.default)))?n:i[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:l}))),[d,u]=m({queryString:t,groupId:r}),[p,x]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[r,l]=(0,c.Dv)(t);return[r,(0,i.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:r}),g=(()=>{const e=null!=d?d:p;return f({value:e,tabValues:l})?e:null})();(0,a.A)((()=>{g&&o(g)}),[g]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!f({value:e,tabValues:l}))throw new Error("Can't select invalid tab value="+e);o(e),u(e),x(e)}),[u,x,l]),tabValues:l}}var x=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function j(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:a}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),r=a[t].value;r!==i&&(d(n),s(r))},u=e=>{var n;let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var i;const n=o.indexOf(e.currentTarget)+1;t=null!=(i=o[n])?i:o[0];break}case"ArrowLeft":{var r;const n=o.indexOf(e.currentTarget)-1;t=null!=(r=o[n])?r:o[o.length-1];break}}null==(n=t)||n.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>o.push(e),onKeyDown:u,onClick:c,...l,className:(0,r.A)("tabs__item",g.tabItem,null==l?void 0:l.className,{"tabs__item--active":i===n}),children:null!=t?t:n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:l.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function C(e){const n=p(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,b.jsx)(j,{...e,...n}),(0,b.jsx)(v,{...e,...n})]})}function N(e){const n=(0,x.A)();return(0,b.jsx)(C,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const r={},l=i.createContext(r);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);